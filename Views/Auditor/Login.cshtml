@model FIRERISK.Models.UserLogin

@{
    ViewBag.Title = "Login";
    Layout = null;
}


<link rel="stylesheet" href="~/Minet/css/main.css" />
<link rel="stylesheet" href="~/Minet/css/util.css" />
<link rel="stylesheet" href="~/Minet/css/bootstrap.css" />



    <body>

        <div class="limiter">
            <div class="container-login100">
                <div class="wrap-login100">
                    <div class="login100-form-title">
                        <span class="login100-form-title-1">
                            Sign In
                        </span>
                    </div>


                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()



                        <form class="login100-form validate-form">
                            <div class="wrap-input100 validate-input m-b-26">
                                <span class="label-input100">Username</span>
 
                                @Html.TextBoxFor(model => model.AuditorName,  new { @class = "input100" } )
                                @Html.ValidationMessageFor(model => model.AuditorName, "", new { @class = "text-danger" })
                                <span class="focus-input100"></span>
                            </div>

                            <div class="wrap-input100 validate-input m-b-18">
                                <span class="label-input100">Password</span>
                                @Html.EditorFor(model => model.Password, new { @class = "input100" } )
                            </div>

                            <div class="flex-sb-m w-full p-b-30">
                                <div class="contact100-form-checkbox">
                                    @Html.EditorFor(model => model.RememberMe)  Remember  Me
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="container-login100-form-btn">
                                <input type="submit" value="Login" class="login100-form-btn" />
                            </div>
                            
                        </form>
                    }
                    </div>
            </div>
        </div>
        
    </body>













    <div class="form-horizontal">
        <h4>UserLogin</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AuditorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AuditorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AuditorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RememberMe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RememberMe)
                    @Html.ValidationMessageFor(model => model.RememberMe, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

